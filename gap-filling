/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var someData = ee.Image("NASA/JPL/global_forest_canopy_height_2005"),
    geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[9.852606749460069, 46.32247581051842],
          [9.852606749460069, 45.90741349621637],
          [10.649115538522569, 45.90741349621637],
          [10.649115538522569, 46.32247581051842]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var oeel=require('users/gravey_mathieu/testlibGithub_v2:openEEL')
// options to gap-fill a raster (single band, single image)
var im=someData.selfMask().rename('test');
var col=ee.ImageCollection([im]);
Map.addLayer(im,{min:1, max:73},'gap with data',false)

/*************  interp inv  *****************/

var interpolated=oeel.Image.inverseDistanceInterpolation({
radius:10,
power:2,
useConvolution:true,
image:im
});
Map.addLayer(interpolated,{min:1, max:73},'inverse interp driect',false);
// OR

var interpolated2=oeel.Image.inverseDistanceInterpolation({
radius:10,
power:2,
useConvolution:true,
})(im);
Map.addLayer(interpolated2,{min:1, max:73},'inverse interp function call',false);
// fro an image collection

var interpCol=col.map(oeel.Image.inverseDistanceInterpolation(10,2,true));
Map.addLayer(interpCol,{min:1, max:73},'inverse interp collection',false);



/*************  Kriging  *****************/

var krig1=oeel.Image.kriging({
covFun:function(dist){return dist.multiply(-0.1).exp().multiply(140);}, // expodential covariance
image:im
});
Map.addLayer(krig1,{min:1, max:73},'kriging driect',false);
// OR

var krig2=oeel.Image.kriging({
covFun:function(dist){return dist.multiply(-0.1).exp().multiply(140);}, // expodential covariance
})(im);
Map.addLayer(krig2,{min:1, max:73},'kriging function call',false);
// fro an image collection

var krigCol=col.map(oeel.Image.kriging({covFun:function(dist){return dist.multiply(-0.1).exp().multiply(140);}}));
Map.addLayer(krigCol,{min:1, max:73},'kriging collection',false);

print('list of functions used',oeel.refs())